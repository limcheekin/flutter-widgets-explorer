// Mocks generated by Mockito 5.0.10 from annotations
// in number_trivia/test/data/repositories/number_trivia_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:number_trivia/common/network/network_info.dart' as _i6;
import 'package:number_trivia/data/datasources/number_trivia_local_data_source.dart'
    as _i5;
import 'package:number_trivia/data/datasources/number_trivia_remote_data_source.dart'
    as _i3;
import 'package:number_trivia/domain/entities/number_trivia.dart' as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeNumberTrivia extends _i1.Fake implements _i2.NumberTrivia {}

/// A class which mocks [NumberTriviaRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockNumberTriviaRemoteDataSource extends _i1.Mock
    implements _i3.NumberTriviaRemoteDataSource {
  MockNumberTriviaRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.NumberTrivia> getConcreteNumberTrivia(int? number) =>
      (super.noSuchMethod(Invocation.method(#getConcreteNumberTrivia, [number]),
              returnValue: Future<_i2.NumberTrivia>.value(_FakeNumberTrivia()))
          as _i4.Future<_i2.NumberTrivia>);
  @override
  _i4.Future<_i2.NumberTrivia> getRandomNumberTrivia() =>
      (super.noSuchMethod(Invocation.method(#getRandomNumberTrivia, []),
              returnValue: Future<_i2.NumberTrivia>.value(_FakeNumberTrivia()))
          as _i4.Future<_i2.NumberTrivia>);
}

/// A class which mocks [NumberTriviaLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockNumberTriviaLocalDataSource extends _i1.Mock
    implements _i5.NumberTriviaLocalDataSource {
  MockNumberTriviaLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.NumberTrivia> getLastNumberTrivia() =>
      (super.noSuchMethod(Invocation.method(#getLastNumberTrivia, []),
              returnValue: Future<_i2.NumberTrivia>.value(_FakeNumberTrivia()))
          as _i4.Future<_i2.NumberTrivia>);
  @override
  _i4.Future<void> cacheNumberTrivia(_i2.NumberTrivia? triviaToCache) => (super
      .noSuchMethod(Invocation.method(#cacheNumberTrivia, [triviaToCache]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i4.Future<void>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i6.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
}
